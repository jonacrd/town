---
import Layout from '@/layouts/Layout.astro';
---

<Layout title="Town - Marketplace local">
  <div class="min-h-screen bg-bg">
    <!-- Header mejorado -->
    <header class="bg-surface shadow-sm border-b border-gray-100 sticky top-0 z-30">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
          <!-- Logo y t√≠tulo -->
          <div class="flex items-center space-x-3">
            <div class="w-10 h-10 bg-primary rounded-soft flex items-center justify-center">
              <span class="text-primary-fg font-bold text-xl">T</span>
            </div>
            <h1 class="text-2xl font-bold text-ink">Town</h1>
          </div>

          <!-- Buscador principal -->
          <div class="flex-1 max-w-2xl mx-8 hidden lg:block">
            <div class="relative">
              <input
                type="text"
                id="main-search"
                placeholder="Buscar productos, categor√≠as..."
                aria-label="Buscar productos"
                class="w-full pl-12 pr-4 py-3 bg-bg border border-gray-200 rounded-full focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-200 text-sm"
              />
              <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                <svg class="h-5 w-5 text-muted" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                  <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path>
                </svg>
              </div>
            </div>
          </div>

          <!-- Acciones del header -->
          <div class="flex items-center space-x-2">
            <button
              id="search-toggle"
              aria-label="Buscar"
              class="p-2 text-muted hover:text-ink hover:bg-gray-100 rounded-soft transition-colors lg:hidden"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
              </svg>
            </button>
          </div>
        </div>

        <!-- Buscador m√≥vil (colapsable) -->
        <div id="mobile-search" class="pb-4 hidden lg:hidden">
          <div class="relative">
            <input
              type="text"
              id="mobile-search-input"
              placeholder="Buscar productos, categor√≠as..."
              aria-label="Buscar productos"
              class="w-full pl-12 pr-4 py-3 bg-bg border border-gray-200 rounded-full focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-200 text-sm"
            />
            <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
              <svg class="h-5 w-5 text-muted" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path>
              </svg>
            </div>
          </div>
        </div>
      </div>
    </header>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
      <!-- Chips de categor√≠as con scroll horizontal -->
      <div class="mb-8">
        <div class="flex items-center justify-between mb-4">
          <h2 class="text-lg font-semibold text-ink">Categor√≠as</h2>
        </div>
        
        <div class="relative">
          <div 
            id="categories-container" 
            class="flex space-x-3 overflow-x-auto scrollbar-hide pb-2"
            style="scrollbar-width: none; -ms-overflow-style: none;"
          >
            <button
              data-category=""
              class="category-chip flex-shrink-0 px-4 py-2 bg-primary text-primary-fg rounded-full text-sm font-medium transition-all duration-200 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
              aria-pressed="true"
            >
              Todos
            </button>
            <button
              data-category="comida"
              class="category-chip flex-shrink-0 px-4 py-2 bg-surface text-ink border border-gray-200 rounded-full text-sm font-medium transition-all duration-200 hover:bg-gray-50 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
              aria-pressed="false"
            >
              üç¥ Comida
            </button>
            <button
              data-category="tecnologia"
              class="category-chip flex-shrink-0 px-4 py-2 bg-surface text-ink border border-gray-200 rounded-full text-sm font-medium transition-all duration-200 hover:bg-gray-50 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
              aria-pressed="false"
            >
              üì± Tecnolog√≠a
            </button>
            <button
              data-category="ropa"
              class="category-chip flex-shrink-0 px-4 py-2 bg-surface text-ink border border-gray-200 rounded-full text-sm font-medium transition-all duration-200 hover:bg-gray-50 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
              aria-pressed="false"
            >
              üëï Ropa
            </button>
            <button
              data-category="hogar"
              class="category-chip flex-shrink-0 px-4 py-2 bg-surface text-ink border border-gray-200 rounded-full text-sm font-medium transition-all duration-200 hover:bg-gray-50 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
              aria-pressed="false"
            >
              üè† Hogar
            </button>
            <button
              data-category="deportes"
              class="category-chip flex-shrink-0 px-4 py-2 bg-surface text-ink border border-gray-200 rounded-full text-sm font-medium transition-all duration-200 hover:bg-gray-50 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
              aria-pressed="false"
            >
              ‚öΩ Deportes
            </button>
            <button
              data-category="servicios"
              class="category-chip flex-shrink-0 px-4 py-2 bg-surface text-ink border border-gray-200 rounded-full text-sm font-medium transition-all duration-200 hover:bg-gray-50 hover:shadow-md focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
              aria-pressed="false"
            >
              üîß Servicios
            </button>
          </div>
        </div>
      </div>

      <!-- Filtros adicionales -->
      <div class="bg-surface rounded-soft shadow-soft p-4 mb-6">
        <div class="flex flex-wrap items-center gap-4">
          <div class="flex items-center space-x-2">
            <label for="sort-filter" class="text-sm font-medium text-ink">Ordenar:</label>
            <select
              id="sort-filter"
              class="px-3 py-1.5 border border-gray-300 rounded-soft focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent text-sm"
            >
              <option value="newest">M√°s recientes</option>
              <option value="price-asc">Precio ‚Üë</option>
              <option value="price-desc">Precio ‚Üì</option>
              <option value="name-asc">A-Z</option>
            </select>
          </div>
          
          <div class="flex items-center space-x-2">
            <span class="text-sm text-muted">|</span>
            <label class="flex items-center space-x-2 text-sm">
              <input
                type="checkbox"
                id="in-stock-only"
                class="rounded border-gray-300 text-primary focus:ring-primary focus:ring-offset-0"
              />
              <span class="text-muted">Solo con stock</span>
            </label>
          </div>
        </div>
      </div>

      <!-- Estado de carga con skeleton loaders -->
      <div id="loading-state" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-8" style="display: none;">
        <!-- Skeleton cards -->
        <div class="bg-surface rounded-soft shadow-soft overflow-hidden animate-pulse">
          <div class="aspect-square bg-gray-200"></div>
          <div class="p-4">
            <div class="h-4 bg-gray-200 rounded mb-2"></div>
            <div class="h-4 bg-gray-200 rounded w-2/3 mb-3"></div>
            <div class="flex justify-between items-center mb-3">
              <div class="h-6 bg-gray-200 rounded w-1/3"></div>
              <div class="h-4 bg-gray-200 rounded w-1/4"></div>
            </div>
            <div class="flex gap-2">
              <div class="flex-1 h-8 bg-gray-200 rounded-soft"></div>
              <div class="flex-1 h-8 bg-gray-200 rounded-soft"></div>
            </div>
          </div>
        </div>
        <!-- Repetir skeleton para m√°s cards -->
        <div class="bg-surface rounded-soft shadow-soft overflow-hidden animate-pulse">
          <div class="aspect-square bg-gray-200"></div>
          <div class="p-4">
            <div class="h-4 bg-gray-200 rounded mb-2"></div>
            <div class="h-4 bg-gray-200 rounded w-2/3 mb-3"></div>
            <div class="flex justify-between items-center mb-3">
              <div class="h-6 bg-gray-200 rounded w-1/3"></div>
              <div class="h-4 bg-gray-200 rounded w-1/4"></div>
            </div>
            <div class="flex gap-2">
              <div class="flex-1 h-8 bg-gray-200 rounded-soft"></div>
              <div class="flex-1 h-8 bg-gray-200 rounded-soft"></div>
            </div>
          </div>
        </div>
        <div class="bg-surface rounded-soft shadow-soft overflow-hidden animate-pulse">
          <div class="aspect-square bg-gray-200"></div>
          <div class="p-4">
            <div class="h-4 bg-gray-200 rounded mb-2"></div>
            <div class="h-4 bg-gray-200 rounded w-2/3 mb-3"></div>
            <div class="flex justify-between items-center mb-3">
              <div class="h-6 bg-gray-200 rounded w-1/3"></div>
              <div class="h-4 bg-gray-200 rounded w-1/4"></div>
            </div>
            <div class="flex gap-2">
              <div class="flex-1 h-8 bg-gray-200 rounded-soft"></div>
              <div class="flex-1 h-8 bg-gray-200 rounded-soft"></div>
            </div>
          </div>
        </div>
        <div class="bg-surface rounded-soft shadow-soft overflow-hidden animate-pulse">
          <div class="aspect-square bg-gray-200"></div>
          <div class="p-4">
            <div class="h-4 bg-gray-200 rounded mb-2"></div>
            <div class="h-4 bg-gray-200 rounded w-2/3 mb-3"></div>
            <div class="flex justify-between items-center mb-3">
              <div class="h-6 bg-gray-200 rounded w-1/3"></div>
              <div class="h-4 bg-gray-200 rounded w-1/4"></div>
            </div>
            <div class="flex gap-2">
              <div class="flex-1 h-8 bg-gray-200 rounded-soft"></div>
              <div class="flex-1 h-8 bg-gray-200 rounded-soft"></div>
            </div>
          </div>
        </div>
      </div>

      <!-- Grid de productos -->
      <div id="products-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-8">
        <!-- Los productos se cargar√°n aqu√≠ din√°micamente -->
      </div>

      <!-- Estado vac√≠o -->
      <div id="empty-state" class="text-center py-12 hidden">
        <div class="w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <svg class="w-12 h-12 text-muted" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
            <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
          </svg>
        </div>
        <h3 class="text-xl font-medium text-ink mb-2">No se encontraron productos</h3>
        <p class="text-muted mb-4">Intenta ajustar los filtros o buscar algo diferente</p>
        <button
          onclick="clearFilters()"
          class="bg-primary hover:bg-blue-700 text-primary-fg px-6 py-2 rounded-soft font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2"
        >
          Limpiar filtros
        </button>
      </div>
    </div>

    <!-- FAB del carrito -->
    <button
      id="cart-fab"
      aria-label="Ver carrito"
      class="fixed bottom-20 lg:bottom-6 right-6 w-14 h-14 bg-accent hover:bg-green-600 text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-200 flex items-center justify-center z-40"
      style="display: none;"
    >
      <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
        <path fill-rule="evenodd" d="M10 2a4 4 0 00-4 4v1H5a1 1 0 00-.994.89l-1 9A1 1 0 004 18h12a1 1 0 00.994-1.11l-1-9A1 1 0 0015 7h-1V6a4 4 0 00-4-4zM8 6a2 2 0 114 0v1H8V6zm0 3a1 1 0 012 0 1 1 0 11-2 0z" clip-rule="evenodd"></path>
      </svg>
      <span id="cart-count" class="absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center font-medium"></span>
    </button>
  </div>

  <script>
    import { apiGet } from '../lib/fetcher.ts';
    import { formatPrice, createWhatsAppLink, createProductWhatsAppText } from '../utils/fetcher.ts';

    // Estado de la aplicaci√≥n
    let cartItems = [];
    let allProducts = [];
    let isLoading = false;
    let currentCategory = '';

    // Elementos del DOM
    const elements = {
      grid: document.getElementById('products-grid'),
      loading: document.getElementById('loading-state'),
      empty: document.getElementById('empty-state'),
      cartFab: document.getElementById('cart-fab'),
      cartCount: document.getElementById('cart-count'),
      mainSearch: document.getElementById('main-search'),
      mobileSearch: document.getElementById('mobile-search-input'),
      searchToggle: document.getElementById('search-toggle'),
      mobileSearchPanel: document.getElementById('mobile-search'),
      sort: document.getElementById('sort-filter'),
      inStockOnly: document.getElementById('in-stock-only'),
      categoriesContainer: document.getElementById('categories-container')
    };

    // Funci√≥n para mostrar toast
    function showToast(message, type = 'info') {
      const toast = document.createElement('div');
      toast.className = `fixed top-4 right-4 z-50 ${type === 'success' ? 'bg-accent' : type === 'error' ? 'bg-red-500' : 'bg-primary'} text-white px-4 py-3 rounded-soft shadow-soft-lg transform transition-all duration-200`;
      toast.textContent = message;
      
      document.body.appendChild(toast);
      setTimeout(() => {
        toast.style.transform = 'translateY(-10px) scale(0.95)';
        toast.style.opacity = '0';
        setTimeout(() => toast.remove(), 200);
      }, 3000);
    }

    // Funci√≥n para formatear precio en CLP
    function formatPriceCLP(cents) {
      return (cents / 100).toLocaleString('es-CL', {
        style: 'currency',
        currency: 'CLP',
        minimumFractionDigits: 0
      });
    }

    // Funci√≥n para cargar productos desde la API
    async function loadProducts(filters = {}) {
      if (isLoading) return;
      
      isLoading = true;
      elements.loading.style.display = 'grid';
      elements.empty.classList.add('hidden');
      elements.grid.style.display = 'none';

      try {
        const params = {
          active: true,
          limit: 50
        };
        if (filters.query) params.query = filters.query;
        if (filters.category) params.category = filters.category;

        const products = await apiGet('/products', params);
        allProducts = products;
        renderProducts(products, filters.sort, filters.inStockOnly);
      } catch (error) {
        console.error('Error loading products:', error);
        showToast('Error al cargar productos. Verifica tu conexi√≥n.', 'error');
        elements.loading.style.display = 'none';
        elements.empty.classList.remove('hidden');
        elements.empty.innerHTML = `
          <div class="text-center py-12">
            <div class="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <svg class="w-8 h-8 text-red-600" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
              </svg>
            </div>
            <h3 class="text-lg font-medium text-ink mb-2">Error al cargar productos</h3>
            <p class="text-muted mb-4">${error.message || 'Verifica tu conexi√≥n a internet'}</p>
            <button onclick="loadProducts()" class="bg-primary hover:bg-blue-700 text-primary-fg px-4 py-2 rounded-soft font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2">
              Reintentar
            </button>
          </div>
        `;
      } finally {
        isLoading = false;
      }
    }

    // Funci√≥n para renderizar productos
    function renderProducts(products, sortBy = 'newest', inStockOnly = false) {
      elements.loading.style.display = 'none';

      // Filtrar por stock si es necesario
      let filteredProducts = inStockOnly ? products.filter(p => p.stock > 0) : products;

      if (!filteredProducts || filteredProducts.length === 0) {
        elements.grid.style.display = 'none';
        elements.empty.classList.remove('hidden');
        return;
      }

      elements.empty.classList.add('hidden');
      elements.grid.style.display = 'grid';

      // Ordenar productos
      const sortedProducts = [...filteredProducts].sort((a, b) => {
        switch (sortBy) {
          case 'price-asc': return a.priceCents - b.priceCents;
          case 'price-desc': return b.priceCents - a.priceCents;
          case 'name-asc': return a.title.localeCompare(b.title);
          default: return new Date(b.createdAt) - new Date(a.createdAt);
        }
      });

      elements.grid.innerHTML = sortedProducts.map(product => `
        <div class="bg-surface rounded-soft shadow-soft hover:shadow-soft-lg overflow-hidden border border-gray-100 transition-all duration-200 group">
          <div class="aspect-square bg-bg relative overflow-hidden">
            ${product.imageUrl ? `
              <img 
                src="${product.imageUrl}" 
                alt="${product.title}" 
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300" 
                loading="lazy"
                width="300"
                height="300"
              />
            ` : `
              <div class="w-full h-full flex items-center justify-center bg-gray-100">
                <div class="w-16 h-16 bg-gray-200 rounded-soft flex items-center justify-center">
                  <svg class="w-8 h-8 text-muted" fill="currentColor" viewBox="0 0 20 20" aria-hidden="true">
                    <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd" />
                  </svg>
                </div>
              </div>
            `}
            
            ${product.stock === 0 ? `
              <div class="absolute top-2 right-2 bg-red-500 text-white px-2 py-1 rounded-soft text-xs font-medium">
                Agotado
              </div>
            ` : product.stock <= 5 ? `
              <div class="absolute top-2 right-2 bg-warm text-white px-2 py-1 rounded-soft text-xs font-medium">
                ¬°√öltimas ${product.stock}!
              </div>
            ` : ''}
          </div>
          <div class="p-4">
            <h3 class="font-semibold text-ink text-sm mb-2 line-clamp-2 group-hover:text-primary transition-colors" title="${product.title}">
              ${product.title}
            </h3>
            <div class="flex items-center justify-between mb-3">
              <span class="text-lg font-bold text-ink">${formatPriceCLP(product.priceCents)}</span>
              <span class="text-xs text-muted">Stock: ${product.stock}</span>
            </div>
            <div class="flex gap-2">
              <button 
                onclick="handleWhatsApp('${product.id}')" 
                class="flex-1 border border-accent text-accent hover:bg-accent hover:text-white py-2 px-3 rounded-soft text-sm font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-accent focus:ring-offset-2"
                aria-label="Contactar por WhatsApp para ${product.title}"
              >
                WhatsApp
              </button>
              ${product.stock > 0 ? `
                <button 
                  onclick="addToCart('${product.id}')" 
                  class="flex-1 bg-accent hover:bg-green-600 text-white py-2 px-3 rounded-soft text-sm font-medium transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-accent focus:ring-offset-2"
                  aria-label="Agregar ${product.title} al carrito"
                >
                  Agregar
                </button>
              ` : `
                <button 
                  disabled 
                  class="flex-1 bg-gray-200 text-muted py-2 px-3 rounded-soft text-sm font-medium cursor-not-allowed"
                  aria-label="Producto agotado"
                >
                  Agotado
                </button>
              `}
            </div>
          </div>
        </div>
      `).join('');
    }

    // Funci√≥n con debounce para filtros
    function debounceFilter() {
      const searchTerm = (elements.mainSearch?.value || elements.mobileSearch?.value || '').trim();
      const sortBy = elements.sort.value;
      const inStockOnly = elements.inStockOnly.checked;

      // Si hay filtros, aplicar localmente sobre allProducts
      let filtered = allProducts;

      if (searchTerm) {
        filtered = filtered.filter(product => 
          product.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
          (product.description && product.description.toLowerCase().includes(searchTerm.toLowerCase()))
        );
      }

      if (currentCategory) {
        filtered = filtered.filter(product => 
          product.category && product.category.toLowerCase() === currentCategory.toLowerCase()
        );
      }

      renderProducts(filtered, sortBy, inStockOnly);
    }

    // Funci√≥n para manejar WhatsApp
    window.handleWhatsApp = (productId) => {
      const product = allProducts.find(p => p.id === productId);
      if (product && product.seller) {
        const whatsappText = createProductWhatsAppText(product);
        const whatsappUrl = createWhatsAppLink(product.seller.user.phone, whatsappText);
        window.open(whatsappUrl, '_blank');
      } else {
        showToast('Error al obtener informaci√≥n del vendedor', 'error');
      }
    };

    // Funci√≥n para agregar al carrito
    window.addToCart = (productId) => {
      const product = allProducts.find(p => p.id === productId);
      if (!product) return;

      const existingItem = cartItems.find(item => item.id === productId);
      if (existingItem) {
        existingItem.quantity += 1;
      } else {
        cartItems.push({
          id: product.id,
          title: product.title,
          priceCents: product.priceCents,
          quantity: 1,
          imageUrl: product.imageUrl
        });
      }

      updateCartUI();
      showToast('Producto agregado al carrito', 'success');
    };

    // Funci√≥n para actualizar UI del carrito
    function updateCartUI() {
      const totalItems = cartItems.reduce((sum, item) => sum + item.quantity, 0);
      
      if (totalItems > 0) {
        elements.cartFab.style.display = 'flex';
        elements.cartCount.textContent = totalItems;
      } else {
        elements.cartFab.style.display = 'none';
      }
    }

    // Funci√≥n para limpiar filtros
    window.clearFilters = () => {
      if (elements.mainSearch) elements.mainSearch.value = '';
      if (elements.mobileSearch) elements.mobileSearch.value = '';
      elements.sort.value = 'newest';
      elements.inStockOnly.checked = false;
      currentCategory = '';
      
      // Resetear chips de categor√≠as
      document.querySelectorAll('.category-chip').forEach(chip => {
        if (chip.dataset.category === '') {
          chip.classList.add('bg-primary', 'text-primary-fg');
          chip.classList.remove('bg-surface', 'text-ink', 'border', 'border-gray-200');
          chip.setAttribute('aria-pressed', 'true');
        } else {
          chip.classList.remove('bg-primary', 'text-primary-fg');
          chip.classList.add('bg-surface', 'text-ink', 'border', 'border-gray-200');
          chip.setAttribute('aria-pressed', 'false');
        }
      });
      
      loadProducts();
    };

    // Event listeners
    let searchTimeout;
    
    // B√∫squeda con debounce
    [elements.mainSearch, elements.mobileSearch].forEach(searchEl => {
      if (searchEl) {
        searchEl.addEventListener('input', () => {
          clearTimeout(searchTimeout);
          searchTimeout = setTimeout(debounceFilter, 300);
        });
      }
    });

    // Filtros
    elements.sort.addEventListener('change', debounceFilter);
    elements.inStockOnly.addEventListener('change', debounceFilter);

    // Toggle b√∫squeda m√≥vil
    elements.searchToggle?.addEventListener('click', () => {
      const isHidden = elements.mobileSearchPanel.classList.contains('hidden');
      if (isHidden) {
        elements.mobileSearchPanel.classList.remove('hidden');
        elements.mobileSearch.focus();
      } else {
        elements.mobileSearchPanel.classList.add('hidden');
      }
    });

    // Chips de categor√≠as
    document.querySelectorAll('.category-chip').forEach(chip => {
      chip.addEventListener('click', () => {
        const category = chip.dataset.category;
        currentCategory = category;
        
        // Actualizar estados visuales
        document.querySelectorAll('.category-chip').forEach(c => {
          c.classList.remove('bg-primary', 'text-primary-fg');
          c.classList.add('bg-surface', 'text-ink', 'border', 'border-gray-200');
          c.setAttribute('aria-pressed', 'false');
        });
        
        chip.classList.add('bg-primary', 'text-primary-fg');
        chip.classList.remove('bg-surface', 'text-ink', 'border', 'border-gray-200');
        chip.setAttribute('aria-pressed', 'true');
        
        debounceFilter();
      });
    });

    // Carrito FAB
    elements.cartFab.addEventListener('click', () => {
      console.log('Abrir carrito con items:', cartItems);
      showToast('Funcionalidad del carrito pr√≥ximamente', 'info');
    });

    // Ocultar scrollbar en contenedor de categor√≠as
    const style = document.createElement('style');
    style.textContent = `
      .scrollbar-hide::-webkit-scrollbar {
        display: none;
      }
      .scrollbar-hide {
        -ms-overflow-style: none;
        scrollbar-width: none;
      }
    `;
    document.head.appendChild(style);

    // Inicializar - cargar productos al inicio
    loadProducts();
  </script>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: .5;
    }
  }

  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
</style>