---
import Layout from '@/layouts/Layout.astro';
---

<Layout title="Town - Feed IA">
  <div class="min-h-screen bg-bg">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
      <!-- Header con balance de monedas -->
      <div class="flex items-center justify-between mb-8">
        <div>
          <h1 class="text-2xl lg:text-3xl font-bold text-ink mb-2">
            Feed IA
          </h1>
          <p class="text-muted">
            Descubre productos personalizados con inteligencia artificial
          </p>
        </div>
        
        <!-- Balance de TownCoins -->
        <div class="bg-surface rounded-soft shadow-soft border border-gray-100 px-4 py-2">
          <div class="flex items-center space-x-2">
            <span class="text-2xl">💰</span>
            <div>
              <p class="text-sm text-muted">TownCoins</p>
              <p class="font-bold text-ink" id="coin-balance">-</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Omnibar de búsqueda IA -->
      <div class="bg-surface rounded-soft shadow-soft border border-gray-100 p-6 mb-8">
        <div class="text-center mb-6">
          <h2 class="text-xl font-semibold text-ink mb-2">¿Qué necesitas hoy?</h2>
          <p class="text-muted">Pregúntame y te ayudo a encontrar los mejores productos</p>
        </div>
        
        <form id="ai-search-form" class="max-w-2xl mx-auto">
          <div class="relative">
            <input
              type="text"
              id="ai-query"
              placeholder="Ej: productos baratos para desayuno, ropa cómoda para el trabajo..."
              class="w-full pl-12 pr-20 py-4 border border-gray-300 rounded-full focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent text-lg"
              maxlength="200"
            />
            <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
              <svg class="h-6 w-6 text-muted" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path>
              </svg>
            </div>
            <button
              type="submit"
              id="search-btn"
              class="absolute inset-y-0 right-0 pr-4 flex items-center"
            >
              <div class="bg-primary hover:bg-blue-700 text-primary-fg px-6 py-2 rounded-full font-medium transition-colors">
                Buscar
              </div>
            </button>
          </div>
        </form>
        
        <!-- Sugerencias rápidas -->
        <div class="mt-6 flex flex-wrap justify-center gap-2">
          <button class="quick-search px-4 py-2 bg-gray-100 hover:bg-gray-200 text-ink rounded-full text-sm transition-colors" data-query="productos baratos">
            💰 Productos baratos
          </button>
          <button class="quick-search px-4 py-2 bg-gray-100 hover:bg-gray-200 text-ink rounded-full text-sm transition-colors" data-query="comida rápida">
            🍔 Comida rápida
          </button>
          <button class="quick-search px-4 py-2 bg-gray-100 hover:bg-gray-200 text-ink rounded-full text-sm transition-colors" data-query="ropa cómoda">
            👕 Ropa cómoda
          </button>
          <button class="quick-search px-4 py-2 bg-gray-100 hover:bg-gray-200 text-ink rounded-full text-sm transition-colors" data-query="productos chilenos">
            🇨🇱 Productos chilenos
          </button>
          <button class="quick-search px-4 py-2 bg-gray-100 hover:bg-gray-200 text-ink rounded-full text-sm transition-colors" data-query="productos venezolanos">
            🇻🇪 Productos venezolanos
          </button>
        </div>
      </div>

      <!-- Estado de carga -->
      <div id="loading-state" class="text-center py-12 hidden">
        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4"></div>
        <p class="text-muted">La IA está analizando tu consulta...</p>
      </div>

      <!-- Respuesta de la IA -->
      <div id="ai-response" class="bg-gradient-to-r from-primary/5 to-accent/5 rounded-soft p-6 mb-8 hidden">
        <div class="flex items-start space-x-4">
          <div class="w-12 h-12 bg-primary rounded-full flex items-center justify-center flex-shrink-0">
            <span class="text-primary-fg text-xl">🤖</span>
          </div>
          <div class="flex-1">
            <h3 class="font-semibold text-ink mb-2">Asistente IA</h3>
            <p id="ai-answer" class="text-ink leading-relaxed"></p>
          </div>
        </div>
      </div>

      <!-- Grid de productos recomendados -->
      <div id="products-section" class="hidden">
        <h3 class="text-xl font-semibold text-ink mb-6">Productos recomendados</h3>
        <div id="products-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          <!-- Los productos se cargarán aquí -->
        </div>
      </div>

      <!-- Estado vacío -->
      <div id="empty-state" class="text-center py-12">
        <div class="w-24 h-24 bg-gradient-to-br from-primary/20 to-accent/20 rounded-full flex items-center justify-center mx-auto mb-6">
          <span class="text-4xl">🤖</span>
        </div>
        <h3 class="text-xl font-semibold text-ink mb-2">¡Hola! Soy tu asistente IA</h3>
        <p class="text-muted mb-6 max-w-md mx-auto">
          Cuéntame qué necesitas y te ayudo a encontrar los mejores productos para ti. 
          Puedo buscar por precio, categoría, país de origen y mucho más.
        </p>
        <div class="space-y-3">
          <p class="text-sm font-medium text-ink">Ejemplos de búsquedas:</p>
          <div class="flex flex-wrap justify-center gap-2 text-sm">
            <span class="px-3 py-1 bg-primary/10 text-primary rounded-full">"productos baratos para el desayuno"</span>
            <span class="px-3 py-1 bg-accent/10 text-accent rounded-full">"ropa cómoda para trabajar"</span>
            <span class="px-3 py-1 bg-warm/10 text-warm rounded-full">"comida venezolana tradicional"</span>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    import { apiPost } from '../lib/fetcher.ts';

    // Estado de la aplicación
    let userId = localStorage.getItem('userId');
    let isLoading = false;

    // Elementos del DOM
    const elements = {
      form: document.getElementById('ai-search-form'),
      query: document.getElementById('ai-query'),
      searchBtn: document.getElementById('search-btn'),
      loadingState: document.getElementById('loading-state'),
      aiResponse: document.getElementById('ai-response'),
      aiAnswer: document.getElementById('ai-answer'),
      productsSection: document.getElementById('products-section'),
      productsGrid: document.getElementById('products-grid'),
      emptyState: document.getElementById('empty-state'),
      coinBalance: document.getElementById('coin-balance'),
      quickSearchBtns: document.querySelectorAll('.quick-search')
    };

    // Función para mostrar toast
    function showToast(message, type = 'info') {
      const toast = document.createElement('div');
      toast.className = `fixed top-4 right-4 z-50 ${type === 'success' ? 'bg-accent' : type === 'error' ? 'bg-red-500' : 'bg-primary'} text-white px-4 py-3 rounded-soft shadow-soft-lg transform transition-all duration-200`;
      toast.textContent = message;
      
      document.body.appendChild(toast);
      setTimeout(() => {
        toast.style.transform = 'translateY(-10px) scale(0.95)';
        toast.style.opacity = '0';
        setTimeout(() => toast.remove(), 200);
      }, 3000);
    }

    // Función para formatear precio
    function formatPrice(cents) {
      return (cents / 100).toLocaleString('es-CL', {
        style: 'currency',
        currency: 'CLP',
        minimumFractionDigits: 0
      });
    }

    // Función para cargar balance de monedas
    async function loadCoinBalance() {
      if (!userId) return;
      
      try {
        const response = await fetch(`/coins/balance?userId=${userId}`);
        const data = await response.json();
        
        if (data.success) {
          elements.coinBalance.textContent = data.data.balance.toLocaleString();
        }
      } catch (error) {
        console.error('Error loading coin balance:', error);
      }
    }

    // Función para realizar búsqueda IA
    async function performAISearch(query) {
      if (!userId) {
        showToast('Debes iniciar sesión para usar el feed IA', 'error');
        window.location.href = '/login';
        return;
      }

      if (isLoading) return;
      
      isLoading = true;
      
      // Mostrar estado de carga
      elements.emptyState.classList.add('hidden');
      elements.aiResponse.classList.add('hidden');
      elements.productsSection.classList.add('hidden');
      elements.loadingState.classList.remove('hidden');
      
      // Actualizar botón
      elements.searchBtn.innerHTML = `
        <div class="bg-primary/50 text-primary-fg px-6 py-2 rounded-full font-medium">
          <svg class="animate-spin -ml-1 mr-2 h-4 w-4 text-white inline" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
          </svg>
          Buscando...
        </div>
      `;

      try {
        const response = await apiPost('/ai/feed', {
          userId,
          query: query.trim()
        });

        if (response.success) {
          // Mostrar respuesta de IA
          elements.aiAnswer.textContent = response.data.answer;
          elements.aiResponse.classList.remove('hidden');
          
          // Mostrar productos
          if (response.data.products && response.data.products.length > 0) {
            renderProducts(response.data.products);
            elements.productsSection.classList.remove('hidden');
          }
          
          elements.loadingState.classList.add('hidden');
        } else {
          throw new Error(response.error || 'Error en la búsqueda');
        }
      } catch (error) {
        console.error('Error in AI search:', error);
        showToast('Error al realizar la búsqueda. Intenta de nuevo.', 'error');
        elements.loadingState.classList.add('hidden');
        elements.emptyState.classList.remove('hidden');
      } finally {
        isLoading = false;
        elements.searchBtn.innerHTML = `
          <div class="bg-primary hover:bg-blue-700 text-primary-fg px-6 py-2 rounded-full font-medium transition-colors">
            Buscar
          </div>
        `;
      }
    }

    // Función para renderizar productos
    function renderProducts(products) {
      elements.productsGrid.innerHTML = products.map(product => `
        <div class="bg-surface rounded-soft shadow-soft hover:shadow-soft-lg overflow-hidden border border-gray-100 transition-all duration-200 group">
          <div class="aspect-square bg-bg relative overflow-hidden">
            ${product.imageUrl ? `
              <img 
                src="${product.imageUrl}" 
                alt="${product.title}" 
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300" 
                loading="lazy"
              />
            ` : `
              <div class="w-full h-full flex items-center justify-center bg-gray-100">
                <span class="text-4xl">${getEmojiForCategory(product.category)}</span>
              </div>
            `}
            
            ${product.stock === 0 ? `
              <div class="absolute top-2 right-2 bg-red-500 text-white px-2 py-1 rounded-soft text-xs font-medium">
                Agotado
              </div>
            ` : product.stock <= 5 ? `
              <div class="absolute top-2 right-2 bg-warm text-white px-2 py-1 rounded-soft text-xs font-medium">
                ¡Últimas ${product.stock}!
              </div>
            ` : ''}
            
            ${product.country ? `
              <div class="absolute top-2 left-2 bg-black/50 text-white px-2 py-1 rounded-soft text-xs">
                ${product.country === 'Chile' ? '🇨🇱' : '🇻🇪'} ${product.country}
              </div>
            ` : ''}
          </div>
          
          <div class="p-4">
            <h3 class="font-semibold text-ink text-sm mb-2 line-clamp-2" title="${product.title}">
              ${product.title}
            </h3>
            <p class="text-xs text-muted mb-3 line-clamp-2">${product.description}</p>
            <div class="flex items-center justify-between mb-3">
              <span class="text-lg font-bold text-ink">${formatPrice(product.priceCents)}</span>
              <span class="text-xs text-muted">Stock: ${product.stock}</span>
            </div>
            <button 
              onclick="addToCart('${product.id}')" 
              class="w-full ${product.stock > 0 ? 'bg-accent hover:bg-green-600 text-white' : 'bg-gray-200 text-muted cursor-not-allowed'} py-2 px-3 rounded-soft text-sm font-medium transition-colors"
              ${product.stock === 0 ? 'disabled' : ''}
            >
              ${product.stock > 0 ? 'Pedir' : 'Agotado'}
            </button>
          </div>
        </div>
      `).join('');
    }

    // Función para obtener emoji por categoría
    function getEmojiForCategory(category) {
      const emojis = {
        'abarrotes': '🛒',
        'charcuteria': '🧀',
        'ropa': '👕',
        'fast-food': '🍔'
      };
      return emojis[category] || '📦';
    }

    // Función para agregar al carrito (placeholder)
    window.addToCart = (productId) => {
      showToast('Producto agregado al carrito', 'success');
      // TODO: Implementar lógica real del carrito
    };

    // Event listeners
    elements.form.addEventListener('submit', (e) => {
      e.preventDefault();
      const query = elements.query.value.trim();
      if (query) {
        performAISearch(query);
      }
    });

    // Búsquedas rápidas
    elements.quickSearchBtns.forEach(btn => {
      btn.addEventListener('click', () => {
        const query = btn.dataset.query;
        elements.query.value = query;
        performAISearch(query);
      });
    });

    // Verificar si hay usuario logueado
    if (!userId) {
      showToast('Iniciando sesión...', 'info');
      setTimeout(() => {
        window.location.href = '/login';
      }, 2000);
    } else {
      // Cargar balance de monedas
      loadCoinBalance();
      
      // Mostrar productos destacados por defecto
      performAISearch('destacados del día');
    }
  </script>

  <style>
    .line-clamp-2 {
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }

    @keyframes spin {
      to { transform: rotate(360deg); }
    }
    .animate-spin {
      animation: spin 1s linear infinite;
    }
  </style>
</Layout>
