// Prisma schema para Town API
// PostgreSQL con modelos para usuarios, vendedores, productos y pedidos

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  phone     String   @unique
  name      String?
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())
  orders    Order[]
  seller    Seller?

  @@map("users")
}

model Seller {
  id        String    @id @default(cuid())
  userId    String    @unique
  tower     String?
  storeName String
  products  Product[]
  user      User      @relation(fields: [userId], references: [id])

  @@map("sellers")
}

model Product {
  id          String      @id @default(cuid())
  sellerId    String
  title       String
  description String?
  priceCents  Int
  stock       Int         @default(0)
  imageUrl    String?
  category    String?
  active      Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  seller      Seller      @relation(fields: [sellerId], references: [id])
  orders      OrderItem[]

  @@map("products")
}

model Order {
  id         String        @id @default(cuid())
  userId     String
  status     OrderStatus   @default(PENDING)
  payment    PaymentMethod @default(CASH)
  totalCents Int
  address    String?
  note       String?
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  items      OrderItem[]
  user       User          @relation(fields: [userId], references: [id])

  @@map("orders")
}

model OrderItem {
  id         String  @id @default(cuid())
  orderId    String
  productId  String
  qty        Int
  priceCents Int
  order      Order   @relation(fields: [orderId], references: [id])
  product    Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

enum Role {
  CUSTOMER
  SELLER
  ADMIN
}

enum OrderStatus {
  PENDING
  PAID
  CANCELLED
  DELIVERED
}

enum PaymentMethod {
  CASH
  TRANSFER
}